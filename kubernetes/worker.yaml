---
apiVersion: v1
data:
  federation-sender.worker: |
    worker_app: synapse.app.federation_sender

    # The replication listener on the synapse to talk to.
    worker_replication_host: matrix-synapse
    worker_replication_port: 9092

    worker_listeners:
    - type: http
      port: 8083
      resources:
        - names:
          - client

    worker_log_config: /synapse/config/log.yaml
  synchrotron.worker: |
    # More information about the content of this file can be found at
    # https://github.com/matrix-org/synapse/blob/master/docs/workers.rst
    worker_app: synapse.app.synchrotron

    # The replication listener on the synapse to talk to.
    worker_replication_host: matrix-synapse
    worker_replication_port: 9092

    worker_listeners:
    - type: http
      port: 8083
      resources:
        - names:
          - client

    worker_log_config: /synapse/config/log.yaml
  homeserver.yaml: |
    ## To fill this in, use docker to generate a homeserver.yaml file
    # ...
    #
    # Don't send federation from main proc
    send_federation: False
    # ...
    listeners:
    # ...
    - port: 9092
      bind_addresses: ['0.0.0.0']
      type: replication
    # ...
kind: ConfigMap
metadata:
  name: matrix-synapse
  namespace: matrix
---
apiVersion: v1
kind: Service
metadata:
  name: synchrotron
  namespace: matrix
spec:
  ports:
  - name: http
    port: 8083
    protocol: TCP
    targetPort: 8083
  selector:
    app: matrix-synapse-worker
    worker: synchrotron
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: matrix-synapse-worker
    worker: federation-sender
  name: federation-sender
  namespace: matrix
spec:
  selector:
    matchLabels:
      app: matrix-synapse-worker
      worker: federation-sender
  template:
    metadata:
      labels:
        app: matrix-synapse-worker
        worker: federation-sender
    spec:
      containers:
      - args:
        - synapse.app.federation_sender
        - -c
        - /synapse/config/federation-sender.worker
        image: ananace/matrix-synapse:0.26.0
        name: worker
        resources:
          limits:
            memory: 512Mi
        volumeMounts:
        - mountPath: /synapse/tls
          name: matrix-synapse-tls
        - mountPath: /synapse/keys
          name: matrix-synapse-tls-dh
        - mountPath: /synapse/config
          name: matrix-synapse-config
      restartPolicy: Always
      volumes:
      - name: matrix-synapse-tls
        secret:
          secretName: matrix-synapse-tls
      - name: matrix-synapse-tls-dh
        secret:
          secretName: matrix-synapse-tls-dh
      - configMap:
          name: matrix-synapse
        name: matrix-synapse-config
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: matrix-synapse-worker
    worker: synchrotron
  name: synchrotron
  namespace: matrix
spec:
  selector:
    matchLabels:
      app: matrix-synapse-worker
      worker: synchrotron
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: matrix-synapse-worker
        worker: synchrotron
    spec:
      containers:
      - args:
        - synapse.app.synchrotron
        - -c
        - /synapse/config/synchrotron.worker
        image: ananace/matrix-synapse:0.25.1
        name: worker
        resources:
          limits:
            memory: 256Mi
        volumeMounts:
        - mountPath: /synapse/tls
          name: matrix-synapse-tls
        - mountPath: /synapse/keys
          name: matrix-synapse-keys
        - mountPath: /synapse/config
          name: matrix-synapse-config
      volumes:
      - name: matrix-synapse-tls
        secret:
          secretName: matrix-synapse-tls
      - name: matrix-synapse-keys
        secret:
          secretName: matrix-synapse-keys
      - configMap:
          name: matrix-synapse
        name: matrix-synapse-config
